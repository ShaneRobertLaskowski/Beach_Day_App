<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:beach_day"
             xmlns:maps="clr-namespace:Xamarin.Forms.Maps;assembly=Xamarin.Forms.Maps"
             x:Class="beach_day.AddBeachPage">
    
    <!--The xmlns:local="clr-namespace:beach_day" is needed for the MultiTriggerConverter resource-->
    <ContentPage.Resources>
        <ResourceDictionary>
            <local:MultiTriggerConverter x:Key="dataHasBeenEntered" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid BackgroundColor="{StaticResource ThemeColor2}" x:Name="PageGridLayout">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.6*"/> <!--make this 3/5ths of page-->
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="0.1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <BoxView BackgroundColor="Black" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"/>

            <Label Text="Welcome to the Beaches page!  This should be a google map, but it isn't :("
                VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" 
                   Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"/>

            <!--The widthRequest and height request seem to make no difference, by default it probably fills its container-->
            <!--<maps:Map WidthRequest="320" HeightRequest="200" x:Name="MyMap" IsShowingUser="true"
                  MapType="Hybrid" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" />
            -->

            <!-- Note: the Text values must be initalized and set to null -> "" for the multi trigger to work -->
            <Entry Placeholder="Enter Name..." Grid.Column="0" Grid.Row="1" 
                   x:Name="BeachEntryName" Grid.ColumnSpan="2" Text=""/>
            <Entry x:Name="BeachEntryLat" Placeholder="Enter Latitude..." Grid.Column="0" 
                   Grid.Row="2" Grid.ColumnSpan="2" Keyboard="Numeric" Text=""/>
            <Entry x:Name="BeachEntryLng" Placeholder="Enter Longitude..." Grid.Column="0" 
                   Grid.Row="3" Grid.ColumnSpan="2" Keyboard="Numeric" Text=""/>

            <Button Style="{StaticResource DefaultButton1}" Grid.Column="0" Grid.Row="4" 
                    Grid.ColumnSpan="3" Text="Add Beach" Clicked="Add_Beach_Button_Clicked" IsEnabled="False">
                <Button.Triggers>
                    <!-- This multi-Trigger disables the Button until one of the 3 labels are not empty-->
                    <!-- We want it so that all 3 must be not empty in order to enable the button -> we must use IValueConverter (see documentation)-->
                    <!-- <MultiTrigger TargetType="Button">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryName}, Path=Text.Length}" Value="0" />
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryLat}, Path=Text.Length}" Value="0" />
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryLng}, Path=Text.Length}" Value="0" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="False" />
                    </MultiTrigger>
                    -->
                    <!--This multi-trigger is a "require all", in that all 3 labels must not be empty in order to enable the "Add" button-->
                    <MultiTrigger TargetType="Button">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryName}, Path=Text.Length,
                              Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryLat}, Path=Text.Length,
                              Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                            <BindingCondition Binding="{Binding Source={x:Reference BeachEntryLng}, Path=Text.Length,
                              Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="True" />
                    </MultiTrigger>
                </Button.Triggers>
            </Button>

        </Grid>

    </ContentPage.Content>
</ContentPage>